// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import (
	service "schedule_table/internal/service"

	mock "github.com/stretchr/testify/mock"
)

// IQueue is an autogenerated mock type for the IQueue type
type IQueue struct {
	mock.Mock
}

// Next provides a mock function with given fields: i
func (_m *IQueue) Next(i int) service.Worker {
	ret := _m.Called(i)

	if len(ret) == 0 {
		panic("no return value specified for Next")
	}

	var r0 service.Worker
	if rf, ok := ret.Get(0).(func(int) service.Worker); ok {
		r0 = rf(i)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.Worker)
		}
	}

	return r0
}

// Select provides a mock function with given fields: i
func (_m *IQueue) Select(i int) {
	_m.Called(i)
}

// Skip provides a mock function with no fields
func (_m *IQueue) Skip() {
	_m.Called()
}

// NewIQueue creates a new instance of IQueue. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIQueue(t interface {
	mock.TestingT
	Cleanup(func())
}) *IQueue {
	mock := &IQueue{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
