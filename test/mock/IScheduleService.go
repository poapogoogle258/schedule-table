// Code generated by mockery v2.51.1. DO NOT EDIT.

package mocks

import (
	dao "schedule_table/internal/model/dao"

	mock "github.com/stretchr/testify/mock"

	service "schedule_table/internal/service"
)

// IScheduleService is an autogenerated mock type for the IScheduleService type
type IScheduleService struct {
	mock.Mock
}

// NewSchedule provides a mock function with given fields: schedule
func (_m *IScheduleService) NewSchedule(schedule *dao.Schedules) service.ISchedule {
	ret := _m.Called(schedule)

	if len(ret) == 0 {
		panic("no return value specified for NewSchedule")
	}

	var r0 service.ISchedule
	if rf, ok := ret.Get(0).(func(*dao.Schedules) service.ISchedule); ok {
		r0 = rf(schedule)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.ISchedule)
		}
	}

	return r0
}

// NewIScheduleService creates a new instance of IScheduleService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIScheduleService(t interface {
	mock.TestingT
	Cleanup(func())
}) *IScheduleService {
	mock := &IScheduleService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
