// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"schedule_table/internal/database"
	"schedule_table/internal/handler"
	"schedule_table/internal/http/router"
	"schedule_table/internal/repository"
	"schedule_table/internal/service"
)

// Injectors from wire.go:

func Injector() *router.Handlers {
	db := database.ConnectPostgresql()
	calendarRepository := repository.NewCalendarRepository(db)
	calendarsHandler := handler.NewCalendarsHandler(calendarRepository)
	jwtService := service.NewJWTAuthService()
	userRepository := repository.NewUserRepository(db)
	authHandler := handler.NewAuthHandler(jwtService, userRepository)
	membersRepository := repository.NewMemberRepository(db)
	memberHandler := handler.NewMemberHandler(membersRepository, calendarRepository)
	scheduleRepository := repository.NewScheduleRepository(db)
	scheduleHandler := handler.NewScheduleHandler(scheduleRepository)
	iScheduleService := service.NewScheduleService()
	iManagerService := service.NewManagerService()
	iTaskRepository := repository.NewTaskRepository(db)
	tasksHandler := handler.NewTasksHandler(calendarRepository, iScheduleService, iManagerService, iTaskRepository)
	leaveRepository := repository.NewLeaveRepository(db)
	leaveHandler := handler.NewLeaveHandler(calendarRepository, leaveRepository)
	handlers := &router.Handlers{
		Calendar: calendarsHandler,
		Auth:     authHandler,
		Member:   memberHandler,
		Schedule: scheduleHandler,
		Task:     tasksHandler,
		Leave:    leaveHandler,
	}
	return handlers
}

// wire.go:

var (
	calendarSet = wire.NewSet(handler.NewCalendarsHandler, repository.NewCalendarRepository)

	authSet = wire.NewSet(handler.NewAuthHandler, repository.NewUserRepository, service.NewJWTAuthService)

	memberSet = wire.NewSet(handler.NewMemberHandler, repository.NewMemberRepository)

	scheduleSet = wire.NewSet(handler.NewScheduleHandler, repository.NewScheduleRepository)

	taskSet = wire.NewSet(handler.NewTasksHandler, service.NewScheduleService, service.NewManagerService, repository.NewTaskRepository)

	leaveSet = wire.NewSet(handler.NewLeaveHandler, repository.NewLeaveRepository)
)
